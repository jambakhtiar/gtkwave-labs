$date
   Sat Jun  8 08:34:27 2024
$end

$version
  2023.2
  $dumpfile ("lab03.vcd") 
$end

$timescale
  1ps
$end

$scope module datapath_tb $end
$var reg 1 ! clk $end
$var reg 32 " instruction [31:0] $end
$var reg 32 # A [31:0] $end
$var reg 32 $ B [31:0] $end
$var wire 1 % reg_dst $end
$var wire 1 & branch $end
$var wire 1 ' mem_read $end
$var wire 1 ( mem_to_reg $end
$var wire 2 ) alu_op [1:0] $end
$var wire 1 * mem_write $end
$var wire 1 + alu_src $end
$var wire 1 , reg_write $end
$var wire 1 - zero $end
$var wire 32 . result [31:0] $end
$var wire 4 / alu_ctrl [3:0] $end
$var integer 32 0 failedTests [31:0] $end
$var integer 32 1 totalTests [31:0] $end
$scope module control_uut $end
$var wire 6 2 instr_op [5:0] $end
$var reg 1 3 reg_dst $end
$var reg 1 4 branch $end
$var reg 1 5 mem_read $end
$var reg 1 6 mem_to_reg $end
$var reg 2 7 alu_op [1:0] $end
$var reg 1 8 mem_write $end
$var reg 1 9 alu_src $end
$var reg 1 : reg_write $end
$upscope $end
$scope module alu_control_uut $end
$var wire 2 ) alu_op [1:0] $end
$var wire 6 ; funct [5:0] $end
$var reg 4 < alu_control [3:0] $end
$upscope $end
$scope module alu_uut $end
$var wire 4 / alu_control [3:0] $end
$var wire 32 = A [31:0] $end
$var wire 32 > B [31:0] $end
$var reg 1 ? zero $end
$var reg 32 @ result [31:0] $end
$upscope $end
$scope task test_case $end
$var reg 32 A instruction_val [31:0] $end
$var reg 32 B A_val [31:0] $end
$var reg 32 C B_val [31:0] $end
$var reg 1 D zero_val $end
$var reg 32 E result_val [31:0] $end
$var reg 1 F reg_dst_val $end
$var reg 1 G branch_val $end
$var reg 1 H mem_read_val $end
$var reg 1 I mem_to_reg_val $end
$var reg 2 J alu_op_val [1:0] $end
$var reg 1 K mem_write_val $end
$var reg 1 L alu_src_val $end
$var reg 1 M reg_write_val $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
0!
bx "
bx #
bx $
x%
x&
x'
x(
bx )
x*
x+
x,
x-
bx .
bx /
b0 0
b0 1
bx 2
x3
x4
x5
x6
bx 7
x8
x9
x:
bx ;
bx <
bx =
bx >
x?
bx @
bx A
bx B
bx C
xD
bx E
xF
xG
xH
xI
bx J
xK
xL
xM
$end

#50000
1!

#60000
b100100 "
b11111111111111111111111111111111 #
b1 $
1%
0&
0'
0(
b10 )
0*
0+
1,
0-
b1 .
b0 /
b1 1
b0 2
13
04
05
06
b10 7
08
09
1:
b100100 ;
b0 <
b11111111111111111111111111111111 =
b1 >
0?
b1 @
b100100 A
b11111111111111111111111111111111 B
b1 C
0D
b1 E
1F
0G
0H
0I
b10 J
0K
0L
1M

#100000
0!

#150000
1!

#170000
b100101 "
b11111111111111111111111111111111 .
b1 /
b10 1
b100101 ;
b1 <
b11111111111111111111111111111111 @
b100101 A
b11111111111111111111111111111111 E

#200000
0!

#250000
1!

#280000
b100000 "
1-
b0 .
b10 /
b11 1
b100000 ;
b10 <
1?
b0 @
b100000 A
1D
b0 E

#300000
0!

#350000
1!

#390000
b100010 "
0-
b11111111111111111111111111111110 .
b110 /
b100 1
b100010 ;
b110 <
0?
b11111111111111111111111111111110 @
b100010 A
0D
b11111111111111111111111111111110 E

#400000
0!

#450000
1!

#500000
0!
b101010 "
b0 #
b1 .
b111 /
b101 1
b101010 ;
b111 <
b0 =
b1 @
b101010 A
b0 B
b1 E

#550000
1!

#600000
0!

#610000
b100111 "
b11111111111111111111111111111111 #
1-
b0 .
b1100 /
b110 1
b100111 ;
b1100 <
b11111111111111111111111111111111 =
1?
b0 @
b100111 A
b11111111111111111111111111111111 B
1D
b0 E

#650000
1!

#700000
0!

#720000
b100000000000000000000000000100 "
b11111111111111111111111111111011 #
b100 $
0%
b0 )
1+
0-
b11111111111111111111111111111111 .
b10 /
b111 1
b1000 2
03
b0 7
19
b100 ;
b10 <
b11111111111111111111111111111011 =
b100 >
0?
b11111111111111111111111111111111 @
b100000000000000000000000000100 A
b11111111111111111111111111111011 B
b100 C
0D
b11111111111111111111111111111111 E
0F
b0 J
1L

#750000
1!

#800000
0!

#830000
b10001100000000000000000000100000 "
b11111111 #
b100000 $
1'
1(
b100011111 .
b1000 1
b100011 2
15
16
b100000 ;
b11111111 =
b100000 >
b100011111 @
b10001100000000000000000000100000 A
b11111111 B
b100000 C
b100011111 E
1H
1I

#850000
1!

#900000
0!

#940000
b10101100000000000000000001100100 "
b1100100 $
0'
0(
1*
0,
b101100011 .
b1001 1
b101011 2
05
06
18
0:
b100100 ;
b1100100 >
b101100011 @
b10101100000000000000000001100100 A
b1100100 C
b101100011 E
0H
0I
1K
0M

#950000
1!

#1000000
0!

#1050000
1!
b10000000000000000000000100101 "
b100101 $
1&
b1 )
0*
0+
b11011010 .
b110 /
b1010 1
b100 2
14
b1 7
08
09
b100101 ;
b110 <
b100101 >
b11011010 @
b10000000000000000000000100101 A
b100101 C
b11011010 E
1G
b1 J
0K
0L

#1100000
0!

#1150000
1!
